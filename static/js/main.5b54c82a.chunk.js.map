{"version":3,"sources":["store/flux.js","store/appContext.js","data.js","views/home.js","App.js","serviceWorker.js","index.js"],"names":["getState","getStore","setStore","getActions","store","product","actions","handleChange","e","target","name","value","cambiarCheckbox","hasOwnProperty","aux","Context","React","createContext","Home","props","useContext","useEffect","fetch","then","response","json","data","setState","className","map","product_name","id","description","valor","src","imagen","alt","type","product_value","onClick","Manzana","Pera","Chocolate","Porsche","IPhone","role","injectContext","PassedComponent","state","getAction","updateStore","Object","assign","Provider","this","Component","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5b54c82a.chunk.js","sourcesContent":["const getState = ({ getStore, getActions, setStore }) => {\r\n    return {\r\n        store: {\r\n            product: {}\r\n\r\n        },\r\n        actions: {\r\n \r\n            handleChange: e => {\r\n                setStore({\r\n                    [e.target.name]: e.target.value\r\n                })\r\n            },\r\n\r\n            cambiarCheckbox: (e) => {\r\n                const store = getStore()\r\n                if (store.product.hasOwnProperty(e.target.name)) {\r\n                    const aux = { ...store.product }\r\n                    delete aux[e.target.name]\r\n                    setStore({ product: aux })\r\n                }\r\n                else {\r\n                    setStore({ product: { ...store.product, [e.target.name]: e.target.value } })\r\n                }\r\n            },\r\n\r\n\r\n \r\n \r\n        }\r\n    }\r\n}\r\nexport default getState;\r\n \r\n \r\n","import React, { Component } from \"react\";\r\nimport getState from \"./flux\";\r\n\r\nexport const Context = React.createContext(null);\r\n\r\nconst injectContext = PassedComponent => {\r\n    class StoreWrapper extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = getState({\r\n                getStore: () => this.state.store,\r\n                getAction: () => this.state.actions,\r\n                setStore: updateStore => this.setState({\r\n                    store: Object.assign(this.state.store, updateStore),\r\n                    actions: { ...this.state.actions }\r\n                })\r\n            })\r\n        }\r\n\r\n        componentDidMount() {\r\n\r\n        }\r\n        render() {\r\n            return (\r\n                <Context.Provider value={this.state}>\r\n                    <PassedComponent {... this.props} />\r\n                </Context.Provider>\r\n            )\r\n        }\r\n    }\r\n    return StoreWrapper;\r\n}\r\n\r\nexport default injectContext;\r\n\r\n","export default [\r\n    {\r\n        \"product_id\": 1,\r\n        \"product_name\": \"Chocolate Amargo\",\r\n        \"valor\": \"$3.990 x unidad\",\r\n        \"imagen\": \"/img/chocolate.jpg\",\r\n        \"product_value\": \"Chocolate\",\r\n        \"description\": \"Barra de chocolate amargo de 300 grs con 72% de cacao\",\r\n         \r\n    },\r\n    {\r\n        \"product_id\": 2,\r\n        \"product_name\": \"Manzana\",\r\n        \"valor\": \"$1.990 x kg\",\r\n        \"imagen\": \"/img/manzana.jpg\",\r\n        \"product_value\": \"Manzana\",\r\n        \"description\": \"1 kg de manzanas a granel\",\r\n    },\r\n    {\r\n        \"product_id\": 3,\r\n        \"product_name\": \"Pera\",\r\n        \"valor\": \"$1.490 x kg\",\r\n        \"imagen\": \"/img/pera.jpg\",\r\n        \"product_value\": \"Pera\",\r\n        \"description\": \"1 kg de peras a granel\",\r\n    },\r\n    {\r\n        \"product_id\": 4,\r\n        \"product_name\": \"Porsche 911\",\r\n        \"valor\": \"$75.900.000\",\r\n        \"imagen\": \"/img/auto.jpg\",\r\n        \"product_value\": \"Porsche\",\r\n        \"description\": \"Porsche 911, mejor auto deportivo 2020\",\r\n    },\r\n    {\r\n        \"product_id\": 5,\r\n        \"product_name\": \"IPhone SE\",\r\n        \"valor\": \"$484.000\",\r\n        \"imagen\": \"/img/celular.jpg\",\r\n        \"product_value\": \"IPhone\",\r\n        \"description\": \"IPhone SE 2020 128 GB Negro\",\r\n    },\r\n    \r\n]","import React, { useContext, useEffect } from \"react\";\r\nimport '../App.css';\r\nimport { Context } from \"../store/appContext\";\r\nimport data from \"../data.js\";\r\n\r\n\r\n\r\nconst Home = props => {\r\n\r\n    const { store, actions } = useContext(Context);\r\n\r\n    useEffect(() => {\r\n        fetch('./db.json')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ data: data }));\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card-group\">\r\n                <div className=\"col-md-9\">\r\n                    <h2>Agrega lo que quieres comprar</h2>\r\n                    <form>\r\n                        <div className=\"row row-cols-1 row-cols-md-3\">\r\n                            {data.map(product => {\r\n                                return (\r\n                                    <div className=\"card mr-3 col-md-5 col-sm-5 mb-3 \">\r\n                                        <div className=\"card-header\">\r\n                                            {product.product_name}\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <div id=\"descripcion\">\r\n                                                <p><strong>Descripci√≥n del producto:</strong> <br />\r\n                                                    {product.description}</p>\r\n                                            </div>\r\n                                            <div id=\"valor\">\r\n                                                <p><strong>Valor:</strong> <br />\r\n                                                    {product.valor}</p>\r\n                                            </div>\r\n\r\n                                            <img\r\n                                                className=\"card card-img\"\r\n                                                src={product.imagen}\r\n                                                alt=\"imagen\" />\r\n                                        </div>\r\n\r\n                                        <div className=\"justify content-between\">\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className=\"mb-3 btn btn-primary \"\r\n                                                name={product.product_value}\r\n                                                id={product.product_value}\r\n                                                onClick={(e) => { actions.cambiarCheckbox(e) }}\r\n                                                value={product.product_value}\r\n                                            >\r\n                                                Agregar\r\n                                        </button>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            }\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div className=\"col-md-3 \" id=\"compras\">\r\n                    <h3>Tu compra</h3>\r\n                    <div\r\n                        className=\"card\"\r\n                        id=\"selection\">\r\n                        {\r\n                            store.product.Manzana !== \"Manzana\" &&\r\n                                store.product.Pera !== \"Pera\" &&\r\n                                store.product.Chocolate !== \"Chocolate\" &&\r\n                                store.product.Porsche !== \"Porsche\" &&\r\n                                store.product.IPhone !== \"IPhone\"\r\n                                ?\r\n                                <alert id=\"alert\" className=\"alert alert-danger\" role=\"alert\"\r\n                                >No haz elegido ningun producto</alert>\r\n                                :\r\n                                <div id=\"add\">\r\n                                    <ul>\r\n                                        <ol>\r\n                                            {store.product.Chocolate}\r\n                                        </ol>\r\n                                        <ol>\r\n                                            {store.product.Manzana}\r\n                                        </ol>\r\n                                        <ol>\r\n                                            {store.product.Pera}\r\n                                        </ol>\r\n                                        <ol>\r\n                                            {store.product.Porsche}\r\n                                        </ol>\r\n                                        <ol>\r\n                                            {store.product.IPhone}\r\n                                        </ol>\r\n                                    </ul>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        id=\"pagar\"\r\n                                        className=\"btn btn-danger \"\r\n                                        src=\"#\"\r\n                                    >\r\n                                        Pagar\r\n                                        </button>\r\n                                </div>\r\n                        }\r\n\r\n                    </div> {/* fin renderizado */}\r\n                </div>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\nimport './App.css';\nimport {  Route, BrowserRouter, Switch } from 'react-router-dom';\nimport injectContext from './store/appContext';\nimport Home from './views/home';\n \nconst App = props => {\n \n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path='/' component={Home} /> \n        </Switch>\n      </BrowserRouter>\n    </>\n  )\n}\n \nexport default injectContext(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}